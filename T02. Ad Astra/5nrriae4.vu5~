using System;
using System.Collections.Generic;
using System.ComponentModel.Design;
using System.Text.RegularExpressions;

namespace T02._Ad_Astra
{
    class Program
    {
        static void Main(string[] args)
        {
            string information = Console.ReadLine();

            Regex template = new Regex(@"([\|\#])(?<foodName>[A-Za-z ]+)\1(?<validTill>[0-9]{2}\/[0-9]{2}\/[0-9]{2})\1(?<calories>[0-9]{0,5})\1");

            Dictionary<string, List<string>> foodSupplies = new Dictionary<string, List<string>>();

            MatchCollection foodInfo = template.Matches(information);

            int caloriesTotal = 0;

            foreach (Match item in foodInfo)
            {
                string name = item.Groups["foodName"].Value;
                string date = item.Groups["validTill"].Value;
                string currCalories = item.Groups["calories"].Value;

                int calories = int.Parse(currCalories);

                if (calories >= 0 && calories <= 10000)
                {
                    caloriesTotal += calories;

                    foodSupplies.Add(name, new List<string>());
                    foodSupplies[name].Add(date);
                    foodSupplies[name].Add(currCalories);
                }
            }

            int foodForDaysCalc = (caloriesTotal / 2000);

            Console.WriteLine($"You have food to last you for: {foodForDaysCalc} days!");

            if (caloriesTotal >= 2000 && foodSupplies.Count > 0)
            {
                foreach (KeyValuePair<string, List<string>> item in foodSupplies)
                {
                    Console.WriteLine($"Item: {item.Key}, Best before: {item.Value[0]}, Nutrition: {item.Value[1]}");
                }
            }
        }
    }
}
